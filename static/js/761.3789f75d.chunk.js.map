{"version":3,"file":"static/js/761.3789f75d.chunk.js","mappings":"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","sources":["components/ScrollBy.js","hooks/useFetchMovieById.js","hooks/useFetchMovieReviews.js","hooks/useFetchMovieCast.js","hooks/useFetchSearchMovies.js","hooks/useFetchTrendMovies.js","pages/Reviews/Reviews.js","services/MoviesApi.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["const scrollBy = () => {\n  window.scrollBy({\n    top: 600,\n    behavior: 'smooth',\n  });\n};\nexport default scrollBy;\n","import { useEffect, useState } from 'react';\nimport { getMovieById } from 'services';\nimport { useParams } from 'react-router-dom';\nexport const useFetchMovieById = () => {\n  const { movieId } = useParams();\n  const [movieById, setMovieById] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch MOVIE BY ID');\n    async function fetchMovieById() {\n      setLoading(true);\n      try {\n        const movieById = await getMovieById(movieId);\n        setMovieById(movieById);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovieById();\n  }, [movieId]);\n  return { movieById, loading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services';\nimport { useParams } from 'react-router-dom';\nimport scrollBy from '../components/ScrollBy';\nexport const useFetchMovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setMovieReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch REVIEW');\n    async function fetchMovieReviews() {\n      setLoading(true);\n      try {\n        const reviews = await getMovieReviews(movieId);\n        setMovieReviews(reviews);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setLoading(false);\n        scrollBy();\n      }\n    }\n    fetchMovieReviews();\n  }, [movieId]);\n  return { reviews, loading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { getMovieCast } from 'services';\nimport { useParams } from 'react-router-dom';\nimport scrollBy from '../components/ScrollBy';\nexport const useFetchMovieCast = () => {\n  const { movieId } = useParams();\n  const [movieById, setMovieById] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch CAST');\n    async function fetchMovieCast() {\n      setLoading(true);\n      try {\n        const movieById = await getMovieCast(movieId);\n        setMovieById(movieById);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setLoading(false);\n        scrollBy();\n      }\n    }\n    fetchMovieCast();\n  }, [movieId]);\n  return { movieById, loading, error };\n};\n","import { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { getSearchMovies } from 'services';\nimport scrollBy from '../components/ScrollBy';\nexport const useFetchSearchMovies = () => {\n  const [listMovies, setListMovies] = useState([]);\n  const [nameMovies, setNameMovies] = useState('');\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch SearchMovies');\n    if (nameMovies === '') {\n      return;\n    }\n    async function fetchSearchMovies() {\n      try {\n        const results = await getSearchMovies(nameMovies, page);\n        if (results.length === 0) {\n          toast.error('Cannot find your request!');\n        }\n        setListMovies(listMovies => [...listMovies, ...results]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        if (page !== 1) {\n          scrollBy();\n        }\n      }\n    }\n    fetchSearchMovies();\n  }, [nameMovies, page]);\n  const handleLoadMore = () => {\n    setPage(page => page + 1);\n  };\n  const handleSearchMovies = searchMovies => {\n    setNameMovies(searchMovies);\n    setListMovies([]);\n  };\n  return { listMovies, error, handleSearchMovies, handleLoadMore };\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendMovies } from 'services/MoviesApi';\nimport scrollBy from '../components/ScrollBy';\nexport const useFetchTrendMovies = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch TrendMovies');\n    async function fetchTrendMovies() {\n      setLoading(true);\n      try {\n        const result = await getTrendMovies(page);\n        setTrendMovies(trendMovies => [...trendMovies, ...result]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n        if (page !== 1) {\n          scrollBy();\n        }\n      }\n    }\n    fetchTrendMovies();\n  }, [page]);\n  const handleLoadMore = () => {\n    setPage(page => page + 1);\n  };\n  return { trendMovies, loading, error, handleLoadMore };\n};\n","import PropTypes from 'prop-types';\nimport { useFetchMovieReviews } from 'hooks';\nexport const Reviews = () => {\n  const { reviews, error } = useFetchMovieReviews();\n  return (\n    <ul>\n      {!error &&\n        reviews &&\n        reviews.map(review => (\n          <li key={review.id}>\n            <p> {review.author_details.username}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n    </ul>\n  );\n};\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf({\n    id: PropTypes.number,\n    author_details: PropTypes.string,\n    content: PropTypes.string,\n  }),\n};\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e815f38922cafca80c1f07403a692f09';\n\nexport const getTrendMovies = async page => {\n  const { data } = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  console.log('TrendMovies');\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  console.log('MovieById');\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  console.log('MovieCast');\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  console.log('MovieReviews');\n\n  return data.results;\n};\n\nexport const getSearchMovies = async (movie, page) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${movie}`\n  );\n  console.log('SearchMovies');\n  return data.results;\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["window","scrollBy","top","behavior","useFetchMovieById","movieId","useParams","useState","movieById","setMovieById","loading","setLoading","error","setError","useEffect","getMovieById","console","log","fetchMovieById","useFetchMovieReviews","reviews","setMovieReviews","getMovieReviews","fetchMovieReviews","useFetchMovieCast","getMovieCast","fetchMovieCast","useFetchSearchMovies","listMovies","setListMovies","nameMovies","setNameMovies","page","setPage","getSearchMovies","results","length","toast","fetchSearchMovies","handleSearchMovies","searchMovies","handleLoadMore","useFetchTrendMovies","trendMovies","setTrendMovies","getTrendMovies","result","fetchTrendMovies","Reviews","map","review","author_details","username","content","id","axios","API_KEY","data","movie","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}