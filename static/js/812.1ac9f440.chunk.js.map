{"version":3,"file":"static/js/812.1ac9f440.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.js","components/ScrollBy.js","hooks/useFetchMovieById.js","hooks/useFetchMovieReviews.js","hooks/useFetchMovieCast.js","hooks/useFetchSearchMovies.js","hooks/useFetchTrendMovies.js","pages/Cast/Cast.js","pages/Cast/Cast.styled.js","pages/Home/Home.js","pages/Home/Home.styled.js","pages/MovieCard/MovieCard.js","pages/MovieCard/MovieCard.styled.js","pages/Reviews/Reviews.js","images/sprite.svg","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.js","pages/SearchMoviesPage/SearchMoviesPage.js","services/MoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\nexport const ButtonLoad = styled.button`\n  padding: 8px 16px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 2px;\n  background-color: gray;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover {\n    background-color: #c4c4c4;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonLoad } from './Button.styled';\nconst Button = ({ loadMore }) => {\n  return (\n    <ButtonLoad type=\"button\" onClick={loadMore}>\n      Load more\n    </ButtonLoad>\n  );\n};\nexport default Button;\nButton.propTypes = {\n  loadMore: PropTypes.func.isRequired,\n};\n","const scrollBy = () => {\n  window.scrollBy({\n    top: 600,\n    behavior: 'smooth',\n  });\n};\nexport default scrollBy;\n","import { useEffect, useState } from 'react';\nimport { getMovieById } from 'services';\nimport { useParams } from 'react-router-dom';\nexport const useFetchMovieById = () => {\n  const { movieId } = useParams();\n  const [movieById, setMovieById] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch MOVIE BY ID');\n    async function fetchMovieById() {\n      setLoading(true);\n      try {\n        const movieById = await getMovieById(movieId);\n        setMovieById(movieById);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovieById();\n  }, [movieId]);\n  return { movieById, loading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { getMovieReviews } from 'services';\nimport { useParams } from 'react-router-dom';\nimport scrollBy from '../components/ScrollBy';\nexport const useFetchMovieReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setMovieReviews] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch REVIEW');\n    async function fetchMovieReviews() {\n      setLoading(true);\n      try {\n        const reviews = await getMovieReviews(movieId);\n        setMovieReviews(reviews);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setLoading(false);\n        scrollBy();\n      }\n    }\n    fetchMovieReviews();\n  }, [movieId]);\n  return { reviews, loading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { getMovieCast } from 'services';\nimport { useParams } from 'react-router-dom';\nimport scrollBy from '../components/ScrollBy';\nexport const useFetchMovieCast = () => {\n  const { movieId } = useParams();\n  const [movieById, setMovieById] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch CAST');\n    async function fetchMovieCast() {\n      setLoading(true);\n      try {\n        const movieById = await getMovieCast(movieId);\n        setMovieById(movieById);\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      } finally {\n        setLoading(false);\n        scrollBy();\n      }\n    }\n    fetchMovieCast();\n  }, [movieId]);\n  return { movieById, loading, error };\n};\n","import { useEffect, useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { getSearchMovies } from 'services';\nimport scrollBy from '../components/ScrollBy';\nexport const useFetchSearchMovies = () => {\n  const [listMovies, setListMovies] = useState([]);\n  const [nameMovies, setNameMovies] = useState('');\n  const [page, setPage] = useState(1);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch SearchMovies');\n    if (nameMovies === '') {\n      return;\n    }\n    async function fetchSearchMovies() {\n      try {\n        const results = await getSearchMovies(nameMovies, page);\n        if (results.length === 0) {\n          toast.error('Cannot find your request!');\n        }\n        setListMovies(listMovies => [...listMovies, ...results]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        if (page !== 1) {\n          scrollBy();\n        }\n      }\n    }\n    fetchSearchMovies();\n  }, [nameMovies, page]);\n  const handleLoadMore = () => {\n    setPage(page => page + 1);\n  };\n  const handleSearchMovies = searchMovies => {\n    setNameMovies(searchMovies);\n    setListMovies([]);\n  };\n  return { listMovies, error, handleSearchMovies, handleLoadMore };\n};\n","import { useEffect, useState } from 'react';\nimport { getTrendMovies } from 'services/MoviesApi';\nimport scrollBy from '../components/ScrollBy';\nexport const useFetchTrendMovies = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch TrendMovies');\n    async function fetchTrendMovies() {\n      setLoading(true);\n      try {\n        const result = await getTrendMovies(page);\n        setTrendMovies(trendMovies => [...trendMovies, ...result]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n        if (page !== 1) {\n          scrollBy();\n        }\n      }\n    }\n    fetchTrendMovies();\n  }, [page]);\n  const handleLoadMore = () => {\n    setPage(page => page + 1);\n  };\n  return { trendMovies, loading, error, handleLoadMore };\n};\n","import PropTypes from 'prop-types';\nimport { useFetchMovieCast } from 'hooks/useFetchMovieCast';\nimport { CastList, CastItem } from './Cast.styled';\nimport inconito from '../../images/inconito.jpg';\nexport const Cast = () => {\n  const { movieById, error } = useFetchMovieCast();\n  return (\n    <CastList>\n      {!error &&\n        movieById &&\n        movieById.cast.map(({ id, profile_path, original_name }) => (\n          <CastItem key={id}>\n            {\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : inconito\n                }\n                alt={original_name}\n              />\n            }\n            <p>{original_name}</p>\n          </CastItem>\n        ))}\n    </CastList>\n  );\n};\nCast.propTypes = {\n  movieById: PropTypes.arrayOf({\n    cast: PropTypes.arrayOf({\n      id: PropTypes.number,\n      profile_path: PropTypes.string,\n      original_name: PropTypes.string,\n    }),\n  }),\n};\n","import styled from 'styled-components';\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px;\n  max-width: 1200px;\n`;\nexport const CastItem = styled.li`\n  background-color: gray;\n  margin: 30px;\n  padding: 10px;\n`;\nexport const BackgroundImg = styled.img`\n  max-width: 200px;\n  background-image: url('../../images/inconito.jpg');\n`;\n","import PropTypes from 'prop-types';\nimport { useFetchTrendMovies } from 'hooks/useFetchTrendMovies';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport Button from '../../components/Button/Button';\nimport { TrendList, TrendTitle } from './Home.styled';\nexport const Home = () => {\n  const { trendMovies, handleLoadMore, loading, error } = useFetchTrendMovies();\n  const location = useLocation();\n  console.log(trendMovies);\n  return (\n    <>\n      <TrendTitle>Trend movies</TrendTitle>\n      {loading}\n      {!error && (\n        <TrendList>\n          {trendMovies.map(({ id, original_title }) => (\n            <li key={id}>\n              <NavLink to={`movies/${id}`} state={{ from: location }}>\n                {original_title}\n              </NavLink>\n            </li>\n          ))}\n        </TrendList>\n      )}\n      {trendMovies.length > 0 && (\n        <Button type=\"button\" loadMore={handleLoadMore} />\n      )}\n    </>\n  );\n};\nHome.propTypes = {\n  trendMovies: PropTypes.objectOf({\n    id: PropTypes.number,\n    original_title: PropTypes.string,\n  }),\n};\n\n// SearchMoviesPage.propTypes = {\n//   listMovies: PropTypes.objectOf({\n//     id: PropTypes.number,\n//     poster_path: PropTypes.string,\n//     original_title: PropTypes.string,\n//     overview: PropTypes.string,\n//     vote_average: PropTypes.string,\n//     genres: PropTypes.shape({\n//       id: PropTypes.number,\n//       name: PropTypes.string,\n//     }),\n//   }),\n// };\n// MovieCard.propTypes = {\n//   movieById: PropTypes.arrayOf({\n//     id: PropTypes.number,\n//     poster_path: PropTypes.string,\n//     original_title: PropTypes.string,\n//     overview: PropTypes.string,\n//     vote_average: PropTypes.string,\n//   }),\n// };\n// Cast.propTypes = {\n//   movieById: PropTypes.arrayOf({\n//     cast: PropTypes.arrayOf({\n//       id: PropTypes.number,\n//       profile_path: PropTypes.string,\n//       original_name: PropTypes.string,\n//     }),\n//   }),\n// };\n","import styled from 'styled-components';\nexport const TrendList = styled.ul`\n  margin: 0 0 40px 0;\n  padding: 5px;\n  color: black;\n`;\n\nexport const TrendTitle = styled.h1`\n  color: tomato;\n`;\n","import PropTypes from 'prop-types';\nimport { useFetchMovieById } from 'hooks';\nimport { LayoutFeatureMovie } from '../../components/layout/Layout';\nimport { Card, Description, VoteAverage } from './MovieCard.styled';\nimport { Link, useLocation } from 'react-router-dom';\nimport { BsFillCaretLeftFill, BsFillStarFill } from 'react-icons/bs';\nimport noPoster from '../../images/noPoster.jpg';\nexport const MovieCard = () => {\n  const location = useLocation();\n  const { movieById, error } = useFetchMovieById();\n  console.log(movieById);\n  return (\n    <>\n      <Link to={location?.state?.from ?? '/'}>\n        <BsFillCaretLeftFill />\n        Go Back\n      </Link>\n      {!error && movieById && (\n        <Card>\n          <img\n            src={\n              movieById.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movieById.poster_path}`\n                : noPoster\n            }\n            alt={movieById.original_title}\n          />\n          <Description>\n            <h1>{movieById.original_title}</h1>\n            <VoteAverage>\n              <span>\n                <BsFillStarFill />\n              </span>\n              {movieById.vote_average}\n            </VoteAverage>\n            <h2>Overview</h2>\n            <p>{movieById.overview}</p>\n            <h2>Genres</h2>\n            <p>\n              {movieById.genres.map(genre => (\n                <span key={genre.id}>{genre.name}</span>\n              ))}\n            </p>\n          </Description>\n        </Card>\n      )}\n      <div>\n        <LayoutFeatureMovie />\n      </div>\n    </>\n  );\n};\nMovieCard.propTypes = {\n  movieById: PropTypes.objectOf({\n    id: PropTypes.number,\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string,\n    overview: PropTypes.string,\n    vote_average: PropTypes.string,\n    genres: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }),\n  }),\n};\n","import styled from 'styled-components';\nexport const Card = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-right: 40px;\n  margin-bottom: 40px;\n  max-width: 1000px;\n  background-color: #c4c4c4;\n`;\nexport const Description = styled.div`\n  padding: 40px;\n`;\nexport const SecondTitle = styled.h2`\n  color: gray;\n`;\nexport const Genres = styled.p`\n  padding-left: 4px;\n`;\nexport const VoteAverage = styled.p`\n  display: flex;\n  padding-left: 4px;\n`;\n","import PropTypes from 'prop-types';\nimport { useFetchMovieReviews } from 'hooks';\nexport const Reviews = () => {\n  const { reviews, error } = useFetchMovieReviews();\n  return (\n    <ul>\n      {!error &&\n        reviews &&\n        reviews.map(review => (\n          <li key={review.id}>\n            <p> {review.author_details.username}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n    </ul>\n  );\n};\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf({\n    id: PropTypes.number,\n    author_details: PropTypes.string,\n    content: PropTypes.string,\n  }),\n};\n","var _symbol;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSprite(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    style: {\n      display: \"none\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 841.9 595.3\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _symbol || (_symbol = /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"search\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0V0z\",\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.616153213901fcca8e8c933b63439661.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport svg from '../../images/sprite.svg';\nexport const Icon = ({ name, fill, width, height, stroke, className }) => {\n  return (\n    <svg\n      fill={fill}\n      width={width}\n      height={height}\n      stroke={stroke}\n      className={`${className} icon-{name}`}\n    >\n      <use xlinkHref={`${svg}#${name}`}></use>\n    </svg>\n  );\n};\n\nIcon.defaultProps = {\n  fill: 'black',\n  name: '',\n  width: '30px',\n  height: '30px',\n  stroke: 'transparent',\n  className: 'icon',\n};\nIcon.propTypes = {\n  fill: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n  height: PropTypes.string.isRequired,\n  stroke: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n};\n\nexport const SurchBarWrapper = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  margin-bottom: 30px;\n  color: #fff;\n  background-color: #c4c4c4;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\nexport const SearchFormButtonLabel = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport toast from 'react-hot-toast';\nimport {\n  SurchBarWrapper,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n  Icon,\n} from './SearchMovies.styled.js';\nexport function SearchMovies({ onSearch }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movieName, setMovieName] = useState('');\n  const query = searchParams.get('query');\n  useEffect(() => {\n    if (query) {\n      setMovieName(query);\n    }\n  }, [query]);\n  const handleInputName = e => {\n    setMovieName(e.currentTarget.value.toLowerCase());\n    // console.log(movieName);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setMovieName(query);\n    // console.log(movieName);\n    // console.log(query);\n    if (movieName.trim() === '') {\n      return toast.error('поисковая строка пуста!');\n    }\n    // setSearchParams({ query: e.currentTarget.elements.query.value });\n    setSearchParams({ query: e.currentTarget.elements.query.value });\n    // setSearchParams({ query: movieName });\n    onSearch(movieName);\n    // query ? onSearch(query) : onSearch(movieName);\n    setMovieName('');\n  };\n  return (\n    <SurchBarWrapper>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <SearchFormButtonLabel></SearchFormButtonLabel>\n          <Icon name=\"search\" fill=\"gray\" width=\"30px\" height=\"30px\" />\n        </SearchFormButton>\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          name=\"query\"\n          value={movieName}\n          autoFocus\n          onChange={handleInputName}\n          placeholder=\"Search films\"\n        />\n      </SearchForm>\n    </SurchBarWrapper>\n  );\n}\nSearchMovies.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { SearchMovies } from '../../components/SearchMovies/SearchMovies';\nimport { useFetchSearchMovies } from 'hooks/useFetchSearchMovies';\nimport Button from '../../components/Button/Button';\nimport { TrendList } from '../Home/Home.styled';\nexport const SearchMoviesPage = () => {\n  const location = useLocation();\n  const { listMovies, error, handleSearchMovies, handleLoadMore } =\n    useFetchSearchMovies();\n  console.log(listMovies);\n  return (\n    <>\n      <SearchMovies onSearch={handleSearchMovies} />\n      {!error && listMovies.length > 0 && (\n        <TrendList>\n          {listMovies.map(({ id, original_title }) => (\n            <li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                {original_title}\n              </Link>\n            </li>\n          ))}\n        </TrendList>\n      )}\n      {listMovies.length > 0 && (\n        <Button type=\"button\" loadMore={handleLoadMore} />\n      )}\n    </>\n  );\n};\nSearchMoviesPage.propTypes = {\n  listMovies: PropTypes.object({\n    id: PropTypes.number,\n    original_title: PropTypes.string,\n  }),\n};\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e815f38922cafca80c1f07403a692f09';\n\nexport const getTrendMovies = async page => {\n  const { data } = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  console.log('TrendMovies');\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  console.log('MovieById');\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  console.log('MovieCast');\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  console.log('MovieReviews');\n\n  return data.results;\n};\n\nexport const getSearchMovies = async (movie, page) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${movie}`\n  );\n  console.log('SearchMovies');\n  return data.results;\n};\n"],"names":["ButtonLoad","styled","loadMore","type","onClick","window","scrollBy","top","behavior","useFetchMovieById","movieId","useParams","useState","movieById","setMovieById","loading","setLoading","error","setError","useEffect","getMovieById","console","log","fetchMovieById","useFetchMovieReviews","reviews","setMovieReviews","getMovieReviews","fetchMovieReviews","useFetchMovieCast","getMovieCast","fetchMovieCast","useFetchSearchMovies","listMovies","setListMovies","nameMovies","setNameMovies","page","setPage","getSearchMovies","results","length","toast","fetchSearchMovies","handleSearchMovies","searchMovies","handleLoadMore","useFetchTrendMovies","trendMovies","setTrendMovies","getTrendMovies","result","fetchTrendMovies","Cast","CastList","cast","map","id","profile_path","original_name","CastItem","src","inconito","alt","BackgroundImg","Home","location","useLocation","TrendTitle","TrendList","original_title","to","state","from","MovieCard","Card","poster_path","noPoster","Description","VoteAverage","vote_average","overview","genres","genre","name","SecondTitle","Genres","Reviews","review","author_details","username","content","Icon","fill","width","height","stroke","className","xlinkHref","svg","defaultProps","SurchBarWrapper","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","SearchMovies","onSearch","useSearchParams","searchParams","setSearchParams","movieName","setMovieName","query","get","onSubmit","e","preventDefault","trim","currentTarget","elements","value","autoComplete","autoFocus","onChange","toLowerCase","placeholder","SearchMoviesPage","Button","axios","API_KEY","data","movie"],"sourceRoot":""}