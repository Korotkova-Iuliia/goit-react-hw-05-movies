{"version":3,"file":"static/js/75.6bb8f3d9.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.js","components/ScrollBy.js","hooks/useFetchTrendMovies.js","pages/Home/Home.js","pages/Home/Home.styled.js","services/MoviesApi.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import styled from 'styled-components';\nexport const ButtonLoad = styled.button`\n  padding: 8px 16px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 2px;\n  background-color: gray;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover {\n    background-color: #c4c4c4;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ButtonLoad } from './Button.styled';\nconst Button = ({ loadMore }) => {\n  return (\n    <ButtonLoad type=\"button\" onClick={loadMore}>\n      Load more\n    </ButtonLoad>\n  );\n};\nexport default Button;\nButton.propTypes = {\n  loadMore: PropTypes.func.isRequired,\n};\n","const scrollBy = () => {\n  window.scrollBy({\n    top: 600,\n    behavior: 'smooth',\n  });\n};\nexport default scrollBy;\n","import { useEffect, useState } from 'react';\nimport { getTrendMovies } from 'services/MoviesApi';\nimport scrollBy from '../components/ScrollBy';\nexport const useFetchTrendMovies = () => {\n  const [trendMovies, setTrendMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    console.log('useFetch TrendMovies');\n    async function fetchTrendMovies() {\n      setLoading(true);\n      try {\n        const result = await getTrendMovies(page);\n        setTrendMovies(trendMovies => [...trendMovies, ...result]);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n        if (page !== 1) {\n          scrollBy();\n        }\n      }\n    }\n    fetchTrendMovies();\n  }, [page]);\n  const handleLoadMore = () => {\n    setPage(page => page + 1);\n  };\n  return { trendMovies, loading, error, handleLoadMore };\n};\n","import PropTypes from 'prop-types';\nimport { useFetchTrendMovies } from 'hooks/useFetchTrendMovies';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport Button from '../../components/Button/Button';\nimport { TrendList, TrendTitle } from './Home.styled';\nexport const Home = () => {\n  const { trendMovies, handleLoadMore, loading, error } = useFetchTrendMovies();\n  const location = useLocation();\n  console.log(trendMovies);\n  return (\n    <>\n      <TrendTitle>Trend movies</TrendTitle>\n      {loading}\n      {!error && (\n        <TrendList>\n          {trendMovies.map(({ id, original_title }) => (\n            <li key={id}>\n              <NavLink to={`movies/${id}`} state={{ from: location }}>\n                {original_title}\n              </NavLink>\n            </li>\n          ))}\n        </TrendList>\n      )}\n      {trendMovies.length > 0 && (\n        <Button type=\"button\" loadMore={handleLoadMore} />\n      )}\n    </>\n  );\n};\nHome.propTypes = {\n  trendMovies: PropTypes.objectOf({\n    id: PropTypes.number,\n    original_title: PropTypes.string,\n  }),\n};\n\n// SearchMoviesPage.propTypes = {\n//   listMovies: PropTypes.objectOf({\n//     id: PropTypes.number,\n//     poster_path: PropTypes.string,\n//     original_title: PropTypes.string,\n//     overview: PropTypes.string,\n//     vote_average: PropTypes.string,\n//     genres: PropTypes.shape({\n//       id: PropTypes.number,\n//       name: PropTypes.string,\n//     }),\n//   }),\n// };\n// MovieCard.propTypes = {\n//   movieById: PropTypes.arrayOf({\n//     id: PropTypes.number,\n//     poster_path: PropTypes.string,\n//     original_title: PropTypes.string,\n//     overview: PropTypes.string,\n//     vote_average: PropTypes.string,\n//   }),\n// };\n// Cast.propTypes = {\n//   movieById: PropTypes.arrayOf({\n//     cast: PropTypes.arrayOf({\n//       id: PropTypes.number,\n//       profile_path: PropTypes.string,\n//       original_name: PropTypes.string,\n//     }),\n//   }),\n// };\n","import styled from 'styled-components';\nexport const TrendList = styled.ul`\n  margin: 0 0 40px 0;\n  padding: 5px;\n  color: black;\n`;\n\nexport const TrendTitle = styled.h1`\n  color: tomato;\n`;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e815f38922cafca80c1f07403a692f09';\n\nexport const getTrendMovies = async page => {\n  const { data } = await axios.get(\n    `/trending/movie/week?api_key=${API_KEY}&page=${page}`\n  );\n  console.log('TrendMovies');\n  return data.results;\n};\n\nexport const getMovieById = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  console.log('MovieById');\n  return data;\n};\n\nexport const getMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  console.log('MovieCast');\n  return data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  console.log('MovieReviews');\n\n  return data.results;\n};\n\nexport const getSearchMovies = async (movie, page) => {\n  const { data } = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=${page}&query=${movie}`\n  );\n  console.log('SearchMovies');\n  return data.results;\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ButtonLoad","styled","loadMore","type","onClick","window","scrollBy","top","behavior","useFetchTrendMovies","useState","trendMovies","setTrendMovies","page","setPage","loading","setLoading","error","setError","useEffect","getTrendMovies","result","console","log","fetchTrendMovies","handleLoadMore","Home","location","useLocation","TrendTitle","TrendList","map","id","original_title","to","state","from","length","axios","API_KEY","data","results","getMovieById","movieId","getMovieCast","getMovieReviews","getSearchMovies","movie","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}